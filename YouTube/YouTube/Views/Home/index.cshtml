@using YouTube.Types
@using System.Collections.Generic
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="content">
    <div class="content-content">
        <span class="title">Populair</span>
        <div class="row">
            @{
                List<Video> videos = ViewBag.popularVideos as List<Video>;
                // Clear duplicate videos
                videos = videos.GroupBy(x => x.VideoId).Select(x => x.First()).ToList();
                foreach (Video video in videos)
                {
                    <div class="thumbnail">
                        <img src="https://i.ytimg.com/vi/@video.VideoLink/0.jpg" />
                        <div class="caption">
                            <a href = "@Url.Action("Index", "watch", new { v = video.VideoLink })"> @video.Title </a><br>
                            <span><a href="@Url.Action("Index", "channel", new { channelId = video.Creator.ChannelId })">@video.Creator.Name</a></span><br>
                            <span id="views">@video.Views views</span><span id="date">@video.UploadDate.ToString("dd/MM/yyyy")</span>
                        </div>
                    </div>
                    <!-- End thumbnail -->
                }
            }
        </div>
        <!-- End row -->
        @if (Session["LoggedInUser"] != null && Session["ActiveChannel"] != null)
        {
            User loggedInUser = Session["LoggedInUser"] as User;
            Channel channel = Session["ActiveChannel"] as Channel;
            foreach(Channel subscription in channel.Subscriptions)
            {
                List<Video> suggestedVideos = subscription.GetNewVideos(3);
                suggestedVideos.AddRange(subscription.GetPopularVideos(3));
                // Clear duplicate videos
                suggestedVideos = suggestedVideos.GroupBy(x => x.VideoId).Select(x => x.First()).ToList();
                if (suggestedVideos.Count > 0)
                {
                    <hr>
                    <span class="title">@subscription.Name</span>
                    <div class="row">
                    @foreach (Video video in suggestedVideos)
                    {
                        <div class="thumbnail">
                            <img src="https://i.ytimg.com/vi/@video.VideoLink/0.jpg" />
                            <div class="caption">
                                <a href="@Url.Action("Index", "watch", new { v = video.VideoLink })">@video.Title</a><br>
                                <span><a href="@Url.Action("Index", "channel", new { channelId = video.Creator.ChannelId })">@video.Creator.Name</a></span><br>
                                <span id="views">@video.Views views</span><span id="date">@video.UploadDate.ToString("dd/MM/yyyy")</span>
                            </div>
                        </div>
                        <!-- End thumbnail -->
                    }
                    </div>
                    <!-- End row -->
                }
            }
        }
    </div>
</div>