@using YouTube.Types
@using System
@using System.Collections.Generic
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="Homepage YouTube">
    <meta name="author" content="Dennis Fokker">
    <title>YouTube</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/base.css" rel="stylesheet">
    <link href="~/Content/index.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body>
    <nav class="navbar navbar-default navbar-fixed-top">
        <div class="container navbar-background">
            <div class="navbar-header navbar-logo">
                <button type="button" class="btn-link glyphicon glyphicon-menu-hamburger navbar-menu" data-toggle="collapse" data-target=".sidebar"></button>
                <a class="navbar-brand logo" href="#"></a>
            </div>
            <!-- End logo and hamburger -->
            <form class="navbar-form" role="search">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search" name="search">
                    <div class="input-group-btn">
                        <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                    </div>
                </div>
            </form>
            <!-- End search -->
            <div class="navbar-form login">
                @if (Session["LoggedInUser"] != null && Session["ActiveChannel"] != null)
                {
                    // Logged in
                    User loggedInUser = Session["LoggedInUser"] as User;
                    Channel channel = Session["ActiveChannel"] as Channel;
                    <label>Logged in as @channel.Name</label>
                    <a href="/upload" class="btn btn-default" role="button">Upload</a>
                    if (loggedInUser.Channels.Count > 1)
                    {
                        <div class="btn-group">
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Change channel <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                @foreach (Channel c in loggedInUser.Channels)
                                {
                                    <li><a href="/?newChannel=@c.Name">@if (c.Name == channel.Name) { <i class="glyphicon glyphicon-check"></i> }@c.Name</a></li>
                                }
                            </ul>
                        </div>
                    }
                }
                else
                {
                    // Not logged in
                    <a href="/login" class="btn btn-default" role="button">Login</a>
                }
            </div>
            <!-- End login -->
        </div>
    </nav>
    <!-- End header -->
    <div class="container">
        <div class="sidebar collapse">
            <div class="sidebar-content">
                <div class="dropdown open">
                    <ul class="">
                        <li><a href="#"><i class="glyphicon glyphicon-home"></i> Home</a></li>
                        @if (Session["LoggedInUser"] != null && Session["ActiveChannel"] != null)
                        {
                            User loggedInUser = Session["LoggedInUser"] as User;
                            Channel channel = Session["ActiveChannel"] as Channel;
                            <li><a href="/channel/@channel.Name"><i class="glyphicon glyphicon-user"></i> My Channel</a></li>
                            if (channel.Playlists.Count > 0)
                            {
                                <li class="divider"></li>
                                <li class="dropdown-header">Playlists</li>
                                foreach (Playlist playlist in channel.Playlists)
                                {
                                    <li><a href="/playlist?id=@playlist.PlaylistId">@playlist.Title</a></li>
                                }
                            }
                            if (channel.Subscriptions.Count > 0)
                            {
                                <li class="divider"></li>
                                <li class="dropdown-header">Subscriptions</li>
                                foreach (Channel subscription in channel.Subscriptions)
                                {
                                    <li><a href="/channel/@subscription.ChannelId">@subscription.Name</a></li>
                                }
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>
        <!-- End side panel -->
        <div class="content">
            <div class="content-content">
                <span class="title">Populair</span>
                <div class="row">
                    @{
                        List<Video> videos = ViewBag.popularVideos as List<Video>;
                        // Clear duplicate videos
                        videos = videos.GroupBy(x => x.VideoId).Select(x => x.First()).ToList();
                        foreach (Video video in videos)
                        {
                            <div class="thumbnail">
                                <img src="https://i.ytimg.com/vi/@video.VideoLink/0.jpg" />
                                <div class="caption">
                                    <a href="/watch?v=@video.VideoLink">@video.Title</a><br>
                                    <span><a href="/channel/@video.Creator.ChannelId">@video.Creator.Name</a></span><br>
                                    <span id="views">@video.Views views</span><span id="date">@video.UploadDate.ToString("dd/MM/yyyy")</span>
                                </div>
                            </div>
                            <!-- End thumbnail -->
                        }
                    }
                </div>
                <!-- End row -->
                @if (Session["LoggedInUser"] != null && Session["ActiveChannel"] != null)
                {
                    User loggedInUser = Session["LoggedInUser"] as User;
                    Channel channel = Session["ActiveChannel"] as Channel;
                    foreach(Channel subscription in channel.Subscriptions)
                    {
                        List<Video> suggestedVideos = subscription.GetNewVideos(1);
                        suggestedVideos.AddRange(subscription.GetPopularVideos(1));
                        // Clear duplicate videos
                        suggestedVideos = suggestedVideos.GroupBy(x => x.VideoId).Select(x => x.First()).ToList();
                        if (suggestedVideos.Count > 0)
                        {
                            <hr>
                            <span class="title">@subscription.Name</span>
                            <div class="row">
                            @foreach (Video video in suggestedVideos)
                            {
                                <div class="thumbnail">
                                    <img src="https://i.ytimg.com/vi/@video.VideoLink/0.jpg" />
                                    <div class="caption">
                                        <a href="/watch?v=@video.VideoLink">@video.Title</a><br>
                                        <span><a href="/channel/@video.Creator.ChannelId">@video.Creator.Name</a></span><br>
                                        <span id="views">@video.Views views</span><span id="date">@video.UploadDate.ToString("dd/MM/yyyy")</span>
                                    </div>
                                </div>
                                <!-- End thumbnail -->
                            }
                            </div>
                            <!-- End row -->
                        }
                    }
                }
            </div>
        </div>
        <!-- End content -->
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
</body>
</html>
